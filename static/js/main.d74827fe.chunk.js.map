{"version":3,"sources":["images/whatsapp_bg.png","constants.ts","components/LeftHeader.tsx","components/SearchBand.tsx","components/ChatList.tsx","components/LeftPanel.tsx","components/RightHeader.tsx","components/ChatWindow.tsx","components/ChatFooter.tsx","components/RightPanel.tsx","components/Dashboard.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Colors","useStyles","makeStyles","theme","createStyles","StyledIconButton","withStyles","root","padding","color","ICON","IconButton","HeaderIconButton","marginLeft","LeftHeader","Box","display","justifyContent","px","py","bgcolor","DIVIDER","style","fontSize","margin","spacing","SearchBand","classes","p","borderRadius","height","InputBase","className","placeholder","inputProps","chatListBox","width","backgroundColor","BORDER","chatListItemBox","cursor","ChatListItem","props","borderBottom","flex","alignItems","flexDirection","Typography","variant","title","subtitle","ChatList","overflow","LeftPanel","borderRight","RightHeader","border","marginRight","chatWindowBox","backgroundImage","require","chatMessageTime","position","bottom","lineHeight","right","chatMessageText","sentMessage","SENTMESSAGE","ChatMessageText","fontFamily","ChatMessage","type","pr","my","message","ChatWindow","ChatFooter","mx","RightPanel","Dashboard","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"wLAAAA,EAAOC,QAAU,IAA0B,yC,2CCA/BC,E,oKAAAA,K,kBAAAA,E,eAAAA,E,wBAAAA,E,uBAAAA,M,KCOZ,IAAMC,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,OAGFC,EAAmBC,YAAW,CACvCC,KAAM,CACJC,QAAS,MACTC,MAAM,GAAD,OAAKT,EAAOU,QAHSJ,CAK3BK,KACQC,EAAmBN,YAAW,CAC3CC,KAAM,CACFM,WAAW,QAFiBP,CAI7BD,GAuBYS,MAtBf,WAEI,OADgBb,IAEZ,kBAACc,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,gBAAgBC,GAAI,EAAGC,GAAI,KAAMC,QAASpB,EAAOqB,SAChF,kBAAChB,EAAD,CAAkBiB,MAAO,CAACd,QAAQ,QAClC,kBAAC,IAAD,CAAmBc,MAAO,CAACC,SAAS,WAEpC,kBAACR,EAAA,EAAD,CAAKC,QAAQ,QACT,kBAACJ,EAAD,KACA,kBAAC,IAAD,OAEA,kBAACA,EAAD,KACA,kBAAC,IAAD,OAEA,kBAACA,EAAD,KACA,kBAAC,IAAD,U,yBClCVX,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoB,OAAQ,CACNA,OAAQrB,EAAMsB,QAAQ,SAsBbC,MAlBf,WACI,IAAMC,EAAU1B,IAChB,OACI,kBAACc,EAAA,EAAD,CAAKK,QAAQ,UAAUQ,EAAG,GACtB,kBAACb,EAAA,EAAD,CAAKC,QAAQ,OAAOI,QAAQ,QAAQS,aAAa,OAAOC,OAAO,QAC3D,kBAACnB,EAAA,EAAD,KACA,kBAAC,IAAD,CAAYW,MAAO,CAACC,SAAS,WAE7B,kBAACQ,EAAA,EAAD,CACIC,UAAWL,EAAQH,OACnBS,YAAY,2BACZC,WAAY,CAAE,aAAc,c,QChB1CjC,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX+B,YAAa,CACT,uBAAuB,CACnBC,MAAM,iBACNN,OAAO,kBAEX,6BAA6B,CACzBO,gBAAgB,GAAD,OAAKrC,EAAOsC,QAC3BR,OAAO,mBAGfS,gBAAiB,CACb,UAAU,CACNF,gBAAgB,WAEpB,WAAW,CACPA,gBAAgB,WAEpBG,OAAO,gBAIf,SAASC,EAAaC,GAClB,IAAMf,EAAU1B,IAChB,OACI,kBAACc,EAAA,EAAD,CAAKC,QAAQ,OAAOgB,UAAWL,EAAQY,iBACnC,kBAACxB,EAAA,EAAD,KACI,kBAAC,IAAD,CAAmBO,MAAO,CAACC,SAAS,OAAOf,QAAQ,MAAMC,MAAM,GAAD,OAAIT,EAAOU,UAE7E,kBAACK,EAAA,EAAD,CAAK4B,aAAa,oBAAoBC,KAAM,EAAG5B,QAAQ,OAAO6B,WAAW,UACrE,kBAAC9B,EAAA,EAAD,CAAKC,QAAQ,OAAO8B,cAAc,UAC9B,kBAACC,EAAA,EAAD,CAAYC,QAAQ,SAASN,EAAMO,OACnC,kBAACF,EAAA,EAAD,CAAYC,QAAQ,SAASN,EAAMQ,WAEvC,kBAACnC,EAAA,EAAD,QA2BDoC,MApBf,SAAkBT,GACd,IAAMf,EAAU1B,IAChB,OACI,kBAACc,EAAA,EAAD,CAAK6B,KAAM,EAAGQ,SAAS,OAAOpB,UAAWL,EAAQQ,aAC7C,kBAACM,EAAD,CAAcQ,MAAM,iBAAiBC,SAAS,6BAC9C,kBAACT,EAAD,CAAcQ,MAAM,iBAAiBC,SAAS,6BAC9C,kBAACT,EAAD,CAAcQ,MAAM,iBAAiBC,SAAS,6BAC9C,kBAACT,EAAD,CAAcQ,MAAM,iBAAiBC,SAAS,6BAC9C,kBAACT,EAAD,CAAcQ,MAAM,iBAAiBC,SAAS,6BAC9C,kBAACT,EAAD,CAAcQ,MAAM,iBAAiBC,SAAS,6BAC9C,kBAACT,EAAD,CAAcQ,MAAM,iBAAiBC,SAAS,6BAC9C,kBAACT,EAAD,CAAcQ,MAAM,iBAAiBC,SAAS,6BAC9C,kBAACT,EAAD,CAAcQ,MAAM,iBAAiBC,SAAS,6BAC9C,kBAACT,EAAD,CAAcQ,MAAM,iBAAiBC,SAAS,6BAC9C,kBAACT,EAAD,CAAcQ,MAAM,iBAAiBC,SAAS,6BAC9C,kBAACT,EAAD,CAAcQ,MAAM,iBAAiBC,SAAS,+BC7C3CG,MAVf,WACI,OACI,kBAACtC,EAAA,EAAD,CAAK6B,KAAM,GAAK5B,QAAQ,OAAO8B,cAAc,SAASQ,YAAW,oBAAetD,EAAOqB,UACnF,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,iBCsBGkC,MA1Bf,WACI,OACI,kBAACxC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,gBAAgBC,GAAI,EAAGC,GAAI,KAAMC,QAASpB,EAAOqB,QAASmC,OAAM,oBAAexD,EAAOsC,SACrH,kBAACvB,EAAA,EAAD,CAAKC,QAAQ,QACT,kBAACX,EAAD,CAAkBiB,MAAO,CAACd,QAAQ,MAAMiD,YAAY,OAAO3B,OAAO,SAClE,kBAAC,IAAD,CAAmBR,MAAO,CAACC,SAAS,WAEpC,kBAACR,EAAA,EAAD,CAAKC,QAAQ,OAAO8B,cAAc,SAAS7B,eAAe,UACtD,kBAAC8B,EAAA,EAAD,CAAYC,QAAQ,SAApB,mBAGR,kBAACjC,EAAA,EAAD,CAAKC,QAAQ,QACT,kBAACJ,EAAD,KACA,kBAAC,IAAD,OAEA,kBAACA,EAAD,KACA,kBAAC,IAAD,OAEA,kBAACA,EAAD,KACA,kBAAC,IAAD,UCvBVX,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACTsD,cAAc,CACVC,gBAAgB,OAAD,OAASC,EAAQ,IAAjB,MAEnBC,gBAAgB,CACdhD,WAAW,OACXiD,SAAU,WACVC,OAAQ,MACRC,WAAY,EACZC,MAAO,MACP1C,SAAS,QAEX2C,gBAAgB,CACdT,YAAY,QAEdU,YAAY,CACR9B,gBAAgB,GAAD,OAAKrC,EAAOoE,aAC3BvD,WAAW,aAIfwD,EAAkB/D,YAAW,CAC/BC,KAAM,CACF+D,WAAW,aAFKhE,CAInByC,KAEL,SAASwB,EAAY7B,GACjB,IAAMf,EAAU1B,IAChB,OACI,kBAACc,EAAA,EAAD,CAAKiB,UAAwB,SAAbU,EAAM8B,KAAgB7C,EAAQwC,YAAY,GAAIL,SAAS,WAAW1C,QAAQ,QAAQgB,MAAM,cAAcR,EAAG,EAAG6C,GAAI,EAAG5C,aAAa,MAAM6C,GAAI,KACtJ,kBAACL,EAAD,CAAiBrB,QAAQ,UAAUhB,UAAWL,EAAQuC,iBAAkBxB,EAAMiC,SAC9E,kBAACN,EAAD,CAAiBrB,QAAQ,WAAWhB,UAAWL,EAAQkC,iBAAvD,UAeGe,MAXf,WACI,IAAMjD,EAAU1B,IAChB,OACI,kBAACc,EAAA,EAAD,CAAK6B,KAAM,EAAGQ,SAAS,OAAOpB,UAAWL,EAAQ+B,cAAe9B,EAAG,GAC/D,kBAAC2C,EAAD,CAAaI,QAAQ,kBAAkBH,KAAK,SAC5C,kBAACD,EAAD,CAAaI,QAAQ,gEAAgEH,KAAK,e,kCCzChGvE,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoB,OAAQ,CACNA,OAAQ,yBAyBCqD,MArBf,WACI,IAAMlD,EAAU1B,IAChB,OACI,kBAACc,EAAA,EAAD,CAAKK,QAAQ,UAAUQ,EAAG,EAAGZ,QAAQ,OAAO6B,WAAW,UACnD,kBAAClC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAoBW,MAAO,CAACC,SAAS,WAEzC,kBAACR,EAAA,EAAD,CAAK6B,KAAM,EAAGkC,GAAI,EAAG1D,QAAQ,QAAQS,aAAa,OAAOC,OAAO,OAAO0B,OAAM,oBAAexD,EAAOqB,UAC/F,kBAACU,EAAA,EAAD,CACIC,UAAWL,EAAQH,OACnBS,YAAY,2BACZC,WAAY,CAAE,aAAc,YAGpC,kBAACvB,EAAA,EAAD,KACI,kBAAC,IAAD,CAASW,MAAO,CAACC,SAAS,aCX3BwD,MAVf,WACI,OACI,kBAAChE,EAAA,EAAD,CAAK6B,KAAM,GAAK5B,QAAQ,OAAO8B,cAAc,UACzC,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCEGkC,MATf,SAAmBtC,GACf,OACI,kBAAC3B,EAAA,EAAD,CAAKe,OAAO,UAAUd,QAAQ,QAC1B,kBAAC,EAAD,MACA,kBAAC,EAAD,QCIGiE,MARf,WACE,OACE,yBAAKjD,UAAU,MAAMV,MAAO,CAACQ,OAAO,UAClC,kBAAC,EAAD,QCKcoD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMxB,c","file":"static/js/main.d74827fe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whatsapp_bg.adbccee0.png\";","export enum Colors {\r\n    DIVIDER = \"#ededed\",\r\n    ICON = '#919191',\r\n    BORDER = 'rgba(0,0,0,.2)',\r\n    SENTMESSAGE = '#dcf8c8'\r\n}","import React from 'react'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport { Box, IconButton, makeStyles, Theme, createStyles, withStyles } from '@material-ui/core';\r\nimport { Colors } from '../constants';\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n  }),\r\n);\r\nexport const StyledIconButton = withStyles({\r\n    root: {\r\n      padding: '8px',\r\n      color: `${Colors.ICON}`\r\n    }\r\n  })(IconButton);\r\nexport const HeaderIconButton = withStyles({\r\nroot: {\r\n    marginLeft:'7px'\r\n}\r\n})(StyledIconButton);\r\nfunction LeftHeader() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box display='flex' justifyContent='space-between' px={2} py={1.25} bgcolor={Colors.DIVIDER}>\r\n            <StyledIconButton style={{padding:'0px'}}>\r\n            <AccountCircleIcon style={{fontSize:'40px'}}/>\r\n            </StyledIconButton>\r\n            <Box display='flex'>\r\n                <HeaderIconButton>\r\n                <DonutLargeIcon/>\r\n                </HeaderIconButton>\r\n                <HeaderIconButton>\r\n                <ChatIcon/>\r\n                </HeaderIconButton>\r\n                <HeaderIconButton>\r\n                <MoreVertIcon/>\r\n                </HeaderIconButton>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default LeftHeader\r\n","import React from 'react'\r\nimport { Box, IconButton, InputBase, createStyles, makeStyles, Theme } from '@material-ui/core'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\nfunction SearchBand() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box bgcolor='#f6f6f6' p={1}>\r\n            <Box display='flex' bgcolor='white' borderRadius='20px' height='35px'>\r\n                <IconButton >\r\n                <SearchIcon style={{fontSize:'18px'}}/>\r\n                </IconButton>\r\n                <InputBase\r\n                    className={classes.margin}\r\n                    placeholder='Search or start new chat'\r\n                    inputProps={{ 'aria-label': 'naked' }}\r\n                />\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SearchBand\r\n","import React from 'react'\r\nimport { Box, IconButton, Typography, createStyles, makeStyles, Theme, ButtonBase } from '@material-ui/core'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { StyledIconButton } from './LeftHeader';\r\nimport { Colors } from '../constants';\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    chatListBox: {\r\n        '&::-webkit-scrollbar':{\r\n            width:'5px !important',\r\n            height:'5px !important'\r\n        },\r\n        '&::-webkit-scrollbar-thumb':{\r\n            backgroundColor: `${Colors.BORDER}`,\r\n            height:'5px !important'\r\n        }\r\n    },\r\n    chatListItemBox: {\r\n        '&:hover':{\r\n            backgroundColor:'#ededed'\r\n        },\r\n        '&:active':{\r\n            backgroundColor:'#ebebeb'\r\n        },\r\n        cursor:'pointer'\r\n    }\r\n  }),\r\n);\r\nfunction ChatListItem(props:any) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box display='flex' className={classes.chatListItemBox}>\r\n            <Box>\r\n                <AccountCircleIcon style={{fontSize:'49px',padding:'8px',color:`${Colors.ICON}`}}/>\r\n            </Box>\r\n            <Box borderBottom='1px solid #efefef' flex={1} display='flex' alignItems='center'>\r\n                <Box display='flex' flexDirection='column'>\r\n                    <Typography variant='body1'>{props.title}</Typography>\r\n                    <Typography variant='body2'>{props.subtitle}</Typography>\r\n                </Box>\r\n                <Box>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nfunction ChatList(props:any) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box flex={1} overflow='auto' className={classes.chatListBox}>\r\n            <ChatListItem title='Kunal Aggarwal' subtitle='This is the last message'/>\r\n            <ChatListItem title='Kunal Aggarwal' subtitle='This is the last message'/>\r\n            <ChatListItem title='Kunal Aggarwal' subtitle='This is the last message'/>\r\n            <ChatListItem title='Kunal Aggarwal' subtitle='This is the last message'/>\r\n            <ChatListItem title='Kunal Aggarwal' subtitle='This is the last message'/>\r\n            <ChatListItem title='Kunal Aggarwal' subtitle='This is the last message'/>\r\n            <ChatListItem title='Kunal Aggarwal' subtitle='This is the last message'/>\r\n            <ChatListItem title='Kunal Aggarwal' subtitle='This is the last message'/>\r\n            <ChatListItem title='Kunal Aggarwal' subtitle='This is the last message'/>\r\n            <ChatListItem title='Kunal Aggarwal' subtitle='This is the last message'/>\r\n            <ChatListItem title='Kunal Aggarwal' subtitle='This is the last message'/>\r\n            <ChatListItem title='Kunal Aggarwal' subtitle='This is the last message'/>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChatList\r\n","import React from 'react'\r\nimport { Box } from '@material-ui/core'\r\nimport LeftHeader from './LeftHeader'\r\nimport SearchBand from './SearchBand'\r\nimport ChatList from './ChatList'\r\nimport { Colors } from '../constants'\r\n\r\nfunction LeftPanel() {\r\n    return (\r\n        <Box flex={0.3} display='flex' flexDirection='column' borderRight={`1px solid ${Colors.DIVIDER}`}>\r\n            <LeftHeader/>\r\n            <SearchBand/>\r\n            <ChatList/>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default LeftPanel\r\n","import React from 'react'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport { Colors } from '../constants';\r\nimport { StyledIconButton, HeaderIconButton } from './LeftHeader';\r\nfunction RightHeader() {\r\n    return (\r\n        <Box display='flex' justifyContent='space-between' px={2} py={1.25} bgcolor={Colors.DIVIDER} border={`1px solid ${Colors.BORDER}`}>\r\n            <Box display='flex'>\r\n                <StyledIconButton style={{padding:'0px',marginRight:'15px',height:'40px'}}>\r\n                <AccountCircleIcon style={{fontSize:'40px'}}/>\r\n                </StyledIconButton>\r\n                <Box display='flex' flexDirection='column' justifyContent='center'>\r\n                    <Typography variant='body1'>Hemant Mangla</Typography>\r\n                </Box>\r\n            </Box>\r\n            <Box display='flex'>\r\n                <HeaderIconButton>\r\n                <SearchIcon/>\r\n                </HeaderIconButton>\r\n                <HeaderIconButton>\r\n                <AttachFileIcon/>\r\n                </HeaderIconButton>\r\n                <HeaderIconButton>\r\n                <MoreVertIcon/>\r\n                </HeaderIconButton>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default RightHeader\r\n","import React from 'react'\r\nimport { Box, makeStyles, Theme, createStyles, Typography, withStyles } from '@material-ui/core'\r\nimport WhatsAppBackground from '../images/whatsapp_bg.png'\r\nimport { Colors } from '../constants';\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n      chatWindowBox:{\r\n          backgroundImage: `url(${require(\"../images/whatsapp_bg.png\")})`\r\n      },\r\n      chatMessageTime:{\r\n        marginLeft:'10px',\r\n        position: \"absolute\",\r\n        bottom: \"4px\",\r\n        lineHeight: 1,\r\n        right: \"4px\",\r\n        fontSize:'10px'\r\n      },\r\n      chatMessageText:{\r\n        marginRight:'10px'\r\n      },\r\n      sentMessage:{\r\n          backgroundColor: `${Colors.SENTMESSAGE}`,\r\n          marginLeft:'auto'\r\n      }\r\n  }),\r\n);\r\nconst ChatMessageText = withStyles({\r\n    root: {\r\n        fontFamily:'Segoe UI',\r\n    }\r\n  })(Typography);\r\n\r\nfunction ChatMessage(props:any){\r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={props.type==='sent' ? classes.sentMessage:\"\"} position='relative' bgcolor='white' width='fit-content' p={1} pr={5} borderRadius='6px' my={0.25}>\r\n            <ChatMessageText variant='caption' className={classes.chatMessageText}>{props.message}</ChatMessageText>\r\n            <ChatMessageText variant='overline' className={classes.chatMessageTime}>02:41</ChatMessageText>\r\n        </Box>\r\n    )\r\n}\r\nfunction ChatWindow() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box flex={1} overflow='auto' className={classes.chatWindowBox} p={4}>\r\n            <ChatMessage message='Hi, Kunal here.' type='sent'/>\r\n            <ChatMessage message=\"Hi Kunal, how are you. How's the COVID situation in your city\" type='received'/>\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChatWindow\r\n","import React from 'react'\r\nimport { Box, IconButton, InputBase, createStyles, makeStyles, Theme } from '@material-ui/core'\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport { Colors } from '../constants';\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    margin: {\r\n      margin: '3px 0px 3px 16px',\r\n    },\r\n  }),\r\n);\r\nfunction ChatFooter() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box bgcolor='#f6f6f6' p={1} display='flex' alignItems='center'>\r\n            <IconButton >\r\n                <InsertEmoticonIcon style={{fontSize:'26px'}}/>\r\n            </IconButton>\r\n            <Box flex={1} mx={1} bgcolor='white' borderRadius='20px' height='35px' border={`1px solid ${Colors.DIVIDER}`}>\r\n                <InputBase\r\n                    className={classes.margin}\r\n                    placeholder='Search or start new chat'\r\n                    inputProps={{ 'aria-label': 'naked' }}\r\n                />\r\n            </Box>\r\n            <IconButton >\r\n                <MicIcon style={{fontSize:'26px'}}/>\r\n            </IconButton>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChatFooter\r\n","import React from 'react'\r\nimport { Box } from '@material-ui/core'\r\nimport RightHeader from './RightHeader'\r\nimport ChatWindow from './ChatWindow'\r\nimport ChatFooter from './ChatFooter'\r\n\r\nfunction RightPanel() {\r\n    return (\r\n        <Box flex={0.7} display='flex' flexDirection='column'>\r\n            <RightHeader/>\r\n            <ChatWindow/>\r\n            <ChatFooter/>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default RightPanel\r\n","import React from 'react'\r\nimport Box from '@material-ui/core/Box'\r\nimport LeftPanel from './LeftPanel'\r\nimport RightPanel from './RightPanel'\r\nfunction Dashboard(props:any) {\r\n    return (\r\n        <Box height='inherit' display='flex'>\r\n            <LeftPanel/>\r\n            <RightPanel/>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import React from 'react';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{height:'100vh'}}>\n      <Dashboard/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}