{"version":3,"sources":["images/whatsapp_bg.png","constants.ts","state.ts","components/LeftHeader.tsx","components/SearchBand.tsx","components/ChatList.tsx","firebase.js","components/LeftPanel.tsx","components/RightHeader.tsx","components/ChatWindow.tsx","components/ChatFooter.tsx","components/RightPanel.tsx","components/SignIn.tsx","components/Dashboard.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Colors","userState","atom","key","default","useStyles","makeStyles","theme","createStyles","StyledIconButton","withStyles","root","padding","color","ICON","IconButton","HeaderIconButton","marginLeft","LeftHeader","useRecoilState","user","Box","display","justifyContent","px","py","bgcolor","DIVIDER","style","src","JSON","parse","photoURL","width","height","borderRadius","fontSize","margin","spacing","SearchBand","classes","p","InputBase","className","placeholder","inputProps","chatListBox","backgroundColor","BORDER","chatListItemBox","cursor","ChatListItem","props","borderBottom","flex","alignItems","flexDirection","Typography","variant","title","subtitle","ChatList","overflow","chatRooms","map","chatRoom","index","to","id","textDecoration","data","name","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","LeftPanel","useState","setChatRooms","useEffect","collection","onSnapshot","snapshot","docs","doc","borderRight","React","memo","border","marginRight","chatRoomName","chatWindowBox","backgroundImage","require","chatMessageTime","position","bottom","lineHeight","right","chatMessageText","sentMessage","SENTMESSAGE","ChatMessageText","fontFamily","ChatMessage","type","pr","my","message","ChatWindow","messages","userName","time","Date","timestamp","toDate","toUTCString","ChatFooter","input","setInput","mx","value","onChange","e","target","onClick","preventDefault","length","sendMessage","RightPanel","params","useParams","setChatRoomName","setMessages","orderBy","displayName","userData","add","FieldValue","serverTimestamp","SignIn","setUser","Button","signInWithPopup","then","result","console","log","setTimeout","stringify","catch","error","Dashboard","path","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,yC,4CCA/BC,E,iLAAAA,K,kBAAAA,E,eAAAA,E,wBAAAA,E,uBAAAA,M,iBCECC,EAAYC,eAAK,CAC1BC,IAAK,YACLC,QAAS,OCKPC,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,OAGFC,EAAmBC,YAAW,CACvCC,KAAM,CACJC,QAAS,MACTC,MAAM,GAAD,OAAKb,EAAOc,QAHSJ,CAK3BK,KACQC,EAAmBN,YAAW,CAC3CC,KAAM,CACFM,WAAW,QAFiBP,CAI7BD,GA2BYS,MA1Bf,WAAuB,IAAD,EACOC,yBAAelB,GADtB,mBACbmB,EADa,KAGlB,OAHkB,KAEJf,IAEV,kBAACgB,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,gBAAgBC,GAAI,EAAGC,GAAI,KAAMC,QAAS1B,EAAO2B,SAChF,kBAAClB,EAAD,CAAkBmB,MAAO,CAAChB,QAAQ,QAElCQ,EAAK,yBAAKS,IAAKC,KAAKC,MAAMX,GAAMY,SAAUJ,MAAO,CAACK,MAAM,OAAOC,OAAO,OAAQC,aAAa,SAC1F,kBAAC,IAAD,CAAmBP,MAAO,CAACQ,SAAS,WAGrC,kBAACf,EAAA,EAAD,CAAKC,QAAQ,QACT,kBAACN,EAAD,KACA,kBAAC,IAAD,OAEA,kBAACA,EAAD,KACA,kBAAC,IAAD,OAEA,kBAACA,EAAD,KACA,kBAAC,IAAD,U,0BCxCVX,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX6B,OAAQ,CACNA,OAAQ9B,EAAM+B,QAAQ,SAsBbC,MAlBf,WACI,IAAMC,EAAUnC,IAChB,OACI,kBAACgB,EAAA,EAAD,CAAKK,QAAQ,UAAUe,EAAG,GACtB,kBAACpB,EAAA,EAAD,CAAKC,QAAQ,OAAOI,QAAQ,QAAQS,aAAa,OAAOD,OAAO,QAC3D,kBAACnB,EAAA,EAAD,KACA,kBAAC,IAAD,CAAYa,MAAO,CAACQ,SAAS,WAE7B,kBAACM,EAAA,EAAD,CACIC,UAAWH,EAAQH,OACnBO,YAAY,2BACZC,WAAY,CAAE,aAAc,c,iBCf1CxC,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXsC,YAAa,CACT,uBAAuB,CACnBb,MAAM,iBACNC,OAAO,kBAEX,6BAA6B,CACzBa,gBAAgB,GAAD,OAAK/C,EAAOgD,QAC3Bd,OAAO,mBAGfe,gBAAiB,CACb,UAAU,CACNF,gBAAgB,WAEpB,WAAW,CACPA,gBAAgB,WAEpBG,OAAO,gBAkBf,SAASC,EAAaC,GAClB,IAAMZ,EAAUnC,IAChB,OACI,kBAACgB,EAAA,EAAD,CAAKC,QAAQ,OAAOqB,UAAWH,EAAQS,iBACnC,kBAAC5B,EAAA,EAAD,KACI,kBAAC,IAAD,CAAmBO,MAAO,CAACQ,SAAS,OAAOxB,QAAQ,MAAMC,MAAM,GAAD,OAAIb,EAAOc,UAE7E,kBAACO,EAAA,EAAD,CAAKgC,aAAa,oBAAoBC,KAAM,EAAGhC,QAAQ,OAAOiC,WAAW,UACrE,kBAAClC,EAAA,EAAD,CAAKC,QAAQ,OAAOkC,cAAc,UAC9B,kBAACC,EAAA,EAAD,CAAYC,QAAQ,SAASN,EAAMO,OACnC,kBAACF,EAAA,EAAD,CAAYC,QAAQ,SAASN,EAAMQ,WAEvC,kBAACvC,EAAA,EAAD,QAODwC,MAhCf,SAAkBT,GACd,IAAMZ,EAAUnC,IAChB,OACI,kBAACgB,EAAA,EAAD,CAAKiC,KAAM,EAAGQ,SAAS,OAAOnB,UAAWH,EAAQM,aAC5CM,EAAMW,WAAaX,EAAMW,UAAUC,KAAI,SAACC,EAAaC,GAAd,OACxC,kBAAC,IAAD,CAAMC,GAAE,iBAAYF,EAASG,IAAMxC,MAAO,CAACyC,eAAe,OAAOxD,MAAM,UACvE,kBAACsC,EAAD,CAAcQ,MAAOM,EAASK,KAAKC,KAAMX,SAAS,mC,iBCvBtDY,EADcC,IAASC,cAXR,CACnBC,OAAQ,0CACRC,WAAY,uCACZC,YAAa,8CACbC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIMC,YACjBC,EAAOX,IAASW,OAChBC,EAAW,IAAIZ,IAASW,KAAKE,mBAEpBd,ICUFe,MAnBf,WAAsB,IAAD,EACoBC,qBADpB,mBACVzB,EADU,KACA0B,EADA,KAUjB,OARAC,qBAAU,WACNlB,EAAGmB,WAAW,aAAaC,YAAW,SAACC,GACnC,IAAI9B,EAAU8B,EAASC,KAAK9B,KAAI,SAAC+B,GAC7B,MAAO,CAAC3B,GAAI2B,EAAI3B,GAAGE,KAAKyB,EAAIzB,WAEhCmB,EAAa1B,QAElB,IAEC,kBAAC1C,EAAA,EAAD,CAAKiC,KAAM,GAAKhC,QAAQ,OAAOkC,cAAc,SAASwC,YAAW,oBAAehG,EAAO2B,UACnF,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAUoC,UAAWA,M,iBCYlBkC,UAAMC,MA1BrB,SAAqB9C,GACjB,OACI,kBAAC/B,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,gBAAgBC,GAAI,EAAGC,GAAI,KAAMC,QAAS1B,EAAO2B,QAASwE,OAAM,oBAAenG,EAAOgD,SACrH,kBAAC3B,EAAA,EAAD,CAAKC,QAAQ,QACT,kBAACb,EAAD,CAAkBmB,MAAO,CAAChB,QAAQ,MAAMwF,YAAY,OAAOlE,OAAO,SAClE,kBAAC,IAAD,CAAmBN,MAAO,CAACQ,SAAS,WAEpC,kBAACf,EAAA,EAAD,CAAKC,QAAQ,OAAOkC,cAAc,SAASjC,eAAe,UACtD,kBAACkC,EAAA,EAAD,CAAYC,QAAQ,SAASN,EAAMiD,gBAG3C,kBAAChF,EAAA,EAAD,CAAKC,QAAQ,QACT,kBAACN,EAAD,KACA,kBAAC,IAAD,OAEA,kBAACA,EAAD,KACA,kBAAC,IAAD,OAEA,kBAACA,EAAD,KACA,kBAAC,IAAD,YCvBVX,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACT8F,cAAc,CACVC,gBAAgB,OAAD,OAASC,EAAQ,KAAjB,MAEnBC,gBAAgB,CACdxF,WAAW,OACXyF,SAAU,WACVC,OAAQ,MACRC,WAAY,EACZC,MAAO,MACPzE,SAAS,QAEX0E,gBAAgB,CACdV,YAAY,QAEdW,YAAY,CACRhE,gBAAgB,GAAD,OAAK/C,EAAOgH,aAC3B/F,WAAW,aAIfgG,EAAkBvG,YAAW,CAC/BC,KAAM,CACFuG,WAAW,aAFKxG,CAInB+C,KAeL,SAAS0D,EAAY/D,GACjB,IAAMZ,EAAUnC,IAChB,OACI,kBAACgB,EAAA,EAAD,CAAKsB,UAAwB,SAAbS,EAAMgE,KAAgB5E,EAAQuE,YAAY,GAAIL,SAAS,WAAWhF,QAAQ,QAAQO,MAAM,cAAcQ,EAAG,EAAG4E,GAAI,EAAGlF,aAAa,MAAMmF,GAAI,KACtJ,kBAACL,EAAD,CAAiBvD,QAAQ,UAAUf,UAAWH,EAAQsE,iBAAkB1D,EAAMmE,SAC9E,kBAACN,EAAD,CAAiBvD,QAAQ,WAAWf,UAAWH,EAAQiE,iBAAvD,UAIGe,MAtBf,SAAoBpE,GAChB,IAAMZ,EAAUnC,IAChB,OACI,kBAACgB,EAAA,EAAD,CAAKiC,KAAM,EAAGQ,SAAS,OAAOnB,UAAWH,EAAQ8D,cAAe7D,EAAG,GAE3DW,EAAMqE,UAAYrE,EAAMqE,SAASzD,KAAI,SAACuD,EAAYrD,GAAb,OACjC,kBAACiD,EAAD,CAAaC,KAAMhE,EAAMsE,WAAWH,EAAQhD,MAAQ,OAAQpE,IAAKoH,EAAQA,QAASA,QAASA,EAAQA,QAASI,KAAM,IAAIC,KAAKL,EAAQM,WAAaN,EAAQM,UAAUC,SAASC,sB,qCCjCzL1H,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX6B,OAAQ,CACNA,OAAQ,yBAuCC2F,OAnCf,SAAoB5E,GAChB,IAAMZ,EAAUnC,KADW,EAEEmF,qBAFF,mBAEpByC,EAFoB,KAEdC,EAFc,KAW3B,OACI,kBAAC7G,EAAA,EAAD,CAAKK,QAAQ,UAAUe,EAAG,EAAGnB,QAAQ,OAAOiC,WAAW,UACnD,kBAACxC,EAAA,EAAD,KACI,kBAAC,KAAD,CAAoBa,MAAO,CAACQ,SAAS,WAEzC,kBAACf,EAAA,EAAD,CAAKiC,KAAM,EAAG6E,GAAI,EAAGzG,QAAQ,QAAQS,aAAa,OAAOD,OAAO,OAAOiE,OAAM,oBAAenG,EAAO2B,UAC/F,8BACA,kBAACe,EAAA,EAAD,CACI0F,MAAOH,EACPI,SAjBM,SAACC,GACnBJ,EAASI,EAAEC,OAAOH,QAiBNzF,UAAWH,EAAQH,OACnBO,YAAY,2BACZC,WAAY,CAAE,aAAc,WAEhC,4BAAQuE,KAAK,SAASxF,MAAO,CAACN,QAAQ,QAASkH,QAnBvC,SAACF,GACjBA,EAAEG,iBACFR,GAASA,EAAMS,OAAO,GAAKtF,EAAMuF,YAAYV,GAC7CC,EAAS,SAmBL,kBAACnH,EAAA,EAAD,KACI,kBAAC,IAAD,CAASa,MAAO,CAACQ,SAAS,a,QCO3BwG,OArCf,WACI,IAAMC,EAAaC,eADD,EAEyBtD,qBAFzB,mBAEXa,EAFW,KAEE0C,EAFF,OAGiBvD,qBAHjB,mBAGXiC,EAHW,KAGFuB,EAHE,OAIS7H,yBAAelB,GAJxB,mBAIXmB,EAJW,KA4BlB,OA5BkB,KAKlBsE,qBAAU,WACHmD,IACCrE,EAAGmB,WAAW,aAAaI,IAA3B,UAAkC8C,EAAOzE,KAAMwB,YAAW,SAACC,GACvDkD,EAAgBlD,EAASvB,OAAOC,SAEpCC,EAAGmB,WAAW,aAAaI,IAA3B,UAAkC8C,EAAOzE,KAAMuB,WAAW,YAAYsD,QAAQ,YAAY,OACzFrD,YAAW,SAACC,GACTmD,EAAYnD,EAASC,KAAK9B,KAAI,SAAC+B,GAC3B,OAAOA,EAAIzB,iBAIxB,CAACuE,IAYA,kBAACxH,EAAA,EAAD,CAAKiC,KAAM,GAAKhC,QAAQ,OAAOkC,cAAc,UACzC,kBAAC,EAAD,CAAa6C,aAAcA,IAC3B,kBAAC,EAAD,CAAYqB,SAAU5F,KAAKC,MAAMX,GAAM8H,YAAazB,SAAUA,IAC9D,kBAAC,GAAD,CAAYkB,YAdA,SAACpB,GACjB,GAAGnG,EAAK,CACJ,IAAI+H,EAAWrH,KAAKC,MAAMX,GAC1BoD,EAAGmB,WAAW,aAAaI,IAA3B,UAAkC8C,EAAOzE,KAAMuB,WAAW,YAAYyD,IAAI,CACtE7B,QAAQA,EACRhD,KAAM4E,EAASD,YACfrB,UAAYpD,IAASU,UAAUkE,WAAWC,0B,UCV3CC,OAnBf,SAAgBnG,GAAY,IAAD,EACKjC,yBAAelB,GADpB,mBACVuJ,GADU,WAYvB,OACI,6BACI,kBAACC,GAAA,EAAD,CAAQjB,QAZD,WACXpD,EAAKsE,gBAAgBrE,GAAUsE,MAAK,SAACC,GACjCC,QAAQC,IAAIF,GACZG,YAAW,WACPP,EAAQ1H,KAAKkI,UAAUJ,EAAOxI,SAChC,QACH6I,OAAM,SAACC,GACNL,QAAQC,IAAII,QAKZ,aCUGC,OApBf,SAAmB/G,GAAY,IAAD,EACFjC,yBAAelB,GADb,mBAClBmB,EADkB,KACboI,EADa,KAE1B,OACI,kBAACnI,EAAA,EAAD,CAAKa,OAAO,UAAUZ,QAAQ,QAErBF,EAEA,kBAAC,IAAD,KACD,kBAAC,EAAD,MACI,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAOgJ,KAAK,cACR,kBAAC,GAAD,SALX,kBAAC,GAAD,CAAQZ,QAASA,MCInBa,OAVf,WACE,OACE,yBAAK1H,UAAU,MAAMf,MAAO,CAACM,OAAO,QAAQ4B,SAAS,WACnD,kBAAC,aAAD,KACA,kBAAC,GAAD,SCFcwG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvB,MAAK,SAAAwB,GACJA,EAAaC,gBAEdnB,OAAM,SAAAC,GACLL,QAAQK,MAAMA,EAAM3C,a","file":"static/js/main.0344385a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whatsapp_bg.adbccee0.png\";","export enum Colors {\r\n    DIVIDER = \"#ededed\",\r\n    ICON = '#919191',\r\n    BORDER = 'rgba(0,0,0,.2)',\r\n    SENTMESSAGE = '#dcf8c8'\r\n}","import { atom } from \"recoil\";\r\n\r\nexport const userState = atom({\r\n    key: 'userState', // unique ID (with respect to other atoms/selectors)\r\n    default: null, // default value (aka initial value)\r\n  });","import React from 'react'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport { Box, IconButton, makeStyles, Theme, createStyles, withStyles } from '@material-ui/core';\r\nimport { Colors } from '../constants';\r\nimport { useRecoilState } from 'recoil';\r\nimport { userState } from '../state';\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n  }),\r\n);\r\nexport const StyledIconButton = withStyles({\r\n    root: {\r\n      padding: '8px',\r\n      color: `${Colors.ICON}`\r\n    }\r\n  })(IconButton);\r\nexport const HeaderIconButton = withStyles({\r\nroot: {\r\n    marginLeft:'7px'\r\n}\r\n})(StyledIconButton);\r\nfunction LeftHeader() {\r\n  const [user,setUser]:any = useRecoilState(userState);\r\n  const classes = useStyles();\r\n    return (\r\n        <Box display='flex' justifyContent='space-between' px={2} py={1.25} bgcolor={Colors.DIVIDER}>\r\n            <StyledIconButton style={{padding:'0px'}}>\r\n            {\r\n            user?<img src={JSON.parse(user).photoURL} style={{width:'35px',height:'35px', borderRadius:'50%'}}/>\r\n            :<AccountCircleIcon style={{fontSize:'40px'}}/>\r\n            }\r\n            </StyledIconButton>\r\n            <Box display='flex'>\r\n                <HeaderIconButton>\r\n                <DonutLargeIcon/>\r\n                </HeaderIconButton>\r\n                <HeaderIconButton>\r\n                <ChatIcon/>\r\n                </HeaderIconButton>\r\n                <HeaderIconButton>\r\n                <MoreVertIcon/>\r\n                </HeaderIconButton>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default LeftHeader\r\n","import React from 'react'\r\nimport { Box, IconButton, InputBase, createStyles, makeStyles, Theme } from '@material-ui/core'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\nfunction SearchBand() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box bgcolor='#f6f6f6' p={1}>\r\n            <Box display='flex' bgcolor='white' borderRadius='20px' height='35px'>\r\n                <IconButton >\r\n                <SearchIcon style={{fontSize:'18px'}}/>\r\n                </IconButton>\r\n                <InputBase\r\n                    className={classes.margin}\r\n                    placeholder='Search or start new chat'\r\n                    inputProps={{ 'aria-label': 'naked' }}\r\n                />\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SearchBand\r\n","import React from 'react'\r\nimport { Box, IconButton, Typography, createStyles, makeStyles, Theme, ButtonBase } from '@material-ui/core'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { StyledIconButton } from './LeftHeader';\r\nimport { Colors } from '../constants';\r\nimport { Link, useParams } from 'react-router-dom';\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    chatListBox: {\r\n        '&::-webkit-scrollbar':{\r\n            width:'5px !important',\r\n            height:'5px !important'\r\n        },\r\n        '&::-webkit-scrollbar-thumb':{\r\n            backgroundColor: `${Colors.BORDER}`,\r\n            height:'5px !important'\r\n        }\r\n    },\r\n    chatListItemBox: {\r\n        '&:hover':{\r\n            backgroundColor:'#ededed'\r\n        },\r\n        '&:active':{\r\n            backgroundColor:'#ebebeb'\r\n        },\r\n        cursor:'pointer'\r\n    }\r\n  }),\r\n);\r\n\r\nfunction ChatList(props:any) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box flex={1} overflow='auto' className={classes.chatListBox}>\r\n            {props.chatRooms && props.chatRooms.map((chatRoom:any,index:number)=>(\r\n            <Link to={`/rooms/${chatRoom.id}`} style={{textDecoration:'none',color:'unset'}}>\r\n            <ChatListItem title={chatRoom.data.name} subtitle='This is the last message'/>\r\n            </Link>\r\n            ))}\r\n        </Box>\r\n    )\r\n}\r\n\r\nfunction ChatListItem(props:any) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box display='flex' className={classes.chatListItemBox}>\r\n            <Box>\r\n                <AccountCircleIcon style={{fontSize:'49px',padding:'8px',color:`${Colors.ICON}`}}/>\r\n            </Box>\r\n            <Box borderBottom='1px solid #efefef' flex={1} display='flex' alignItems='center'>\r\n                <Box display='flex' flexDirection='column'>\r\n                    <Typography variant='body1'>{props.title}</Typography>\r\n                    <Typography variant='body2'>{props.subtitle}</Typography>\r\n                </Box>\r\n                <Box>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChatList\r\n","import firebase from 'firebase'\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCbQHgZzSB5A4-7tqCuoWo4pEi92x3Qixc\",\r\n    authDomain: \"whatsapp-clone-f85be.firebaseapp.com\",\r\n    databaseURL: \"https://whatsapp-clone-f85be.firebaseio.com\",\r\n    projectId: \"whatsapp-clone-f85be\",\r\n    storageBucket: \"whatsapp-clone-f85be.appspot.com\",\r\n    messagingSenderId: \"229034256428\",\r\n    appId: \"1:229034256428:web:642d66b1f0b5e27c8e0989\",\r\n    measurementId: \"G-SGCVG85KW0\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig)\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  export {auth,provider};\r\n  export default db;","import React, { useEffect, useState } from 'react'\r\nimport { Box } from '@material-ui/core'\r\nimport LeftHeader from './LeftHeader'\r\nimport SearchBand from './SearchBand'\r\nimport ChatList from './ChatList'\r\nimport { Colors } from '../constants'\r\nimport db from '../firebase'\r\n\r\nfunction LeftPanel() {\r\n    const [chatRooms,setChatRooms]:any = useState()\r\n    useEffect(() => {\r\n        db.collection('chatrooms').onSnapshot((snapshot)=>{\r\n            let chatRooms=snapshot.docs.map((doc)=>{\r\n                return {id: doc.id,data:doc.data()}\r\n            })\r\n            setChatRooms(chatRooms);\r\n        })      \r\n    }, [])\r\n    return (\r\n        <Box flex={0.3} display='flex' flexDirection='column' borderRight={`1px solid ${Colors.DIVIDER}`}>\r\n            <LeftHeader/>\r\n            <SearchBand/>\r\n            <ChatList chatRooms={chatRooms}/>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default LeftPanel\r\n","import React, { useMemo } from 'react'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport { Colors } from '../constants';\r\nimport { StyledIconButton, HeaderIconButton } from './LeftHeader';\r\nfunction RightHeader(props:any) {\r\n    return (\r\n        <Box display='flex' justifyContent='space-between' px={2} py={1.25} bgcolor={Colors.DIVIDER} border={`1px solid ${Colors.BORDER}`}>\r\n            <Box display='flex'>\r\n                <StyledIconButton style={{padding:'0px',marginRight:'15px',height:'40px'}}>\r\n                <AccountCircleIcon style={{fontSize:'40px'}}/>\r\n                </StyledIconButton>\r\n                <Box display='flex' flexDirection='column' justifyContent='center'>\r\n                    <Typography variant='body1'>{props.chatRoomName}</Typography>\r\n                </Box>\r\n            </Box>\r\n            <Box display='flex'>\r\n                <HeaderIconButton>\r\n                <SearchIcon/>\r\n                </HeaderIconButton>\r\n                <HeaderIconButton>\r\n                <AttachFileIcon/>\r\n                </HeaderIconButton>\r\n                <HeaderIconButton>\r\n                <MoreVertIcon/>\r\n                </HeaderIconButton>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default React.memo(RightHeader)\r\n","import React, { useEffect } from 'react'\r\nimport { Box, makeStyles, Theme, createStyles, Typography, withStyles } from '@material-ui/core'\r\nimport WhatsAppBackground from '../images/whatsapp_bg.png'\r\nimport { Colors } from '../constants';\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n      chatWindowBox:{\r\n          backgroundImage: `url(${require(\"../images/whatsapp_bg.png\")})`\r\n      },\r\n      chatMessageTime:{\r\n        marginLeft:'10px',\r\n        position: \"absolute\",\r\n        bottom: \"4px\",\r\n        lineHeight: 1,\r\n        right: \"4px\",\r\n        fontSize:'10px'\r\n      },\r\n      chatMessageText:{\r\n        marginRight:'10px'\r\n      },\r\n      sentMessage:{\r\n          backgroundColor: `${Colors.SENTMESSAGE}`,\r\n          marginLeft:'auto'\r\n      }\r\n  }),\r\n);\r\nconst ChatMessageText = withStyles({\r\n    root: {\r\n        fontFamily:'Segoe UI',\r\n    }\r\n  })(Typography);\r\n\r\nfunction ChatWindow(props:any) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box flex={1} overflow='auto' className={classes.chatWindowBox} p={4}>\r\n            {   \r\n                props.messages && props.messages.map((message:any,index:number)=>(\r\n                    <ChatMessage type={props.userName===message.name && 'sent'} key={message.message} message={message.message} time={new Date(message.timestamp && message.timestamp.toDate().toUTCString())}/>\r\n                ))\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nfunction ChatMessage(props:any){\r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={props.type==='sent' ? classes.sentMessage:\"\"} position='relative' bgcolor='white' width='fit-content' p={1} pr={5} borderRadius='6px' my={0.25}>\r\n            <ChatMessageText variant='caption' className={classes.chatMessageText}>{props.message}</ChatMessageText>\r\n            <ChatMessageText variant='overline' className={classes.chatMessageTime}>02:41</ChatMessageText>\r\n        </Box>\r\n    )\r\n}\r\nexport default ChatWindow\r\n","import React, { useState } from 'react'\r\nimport { Box, IconButton, InputBase, createStyles, makeStyles, Theme } from '@material-ui/core'\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport { Colors } from '../constants';\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    margin: {\r\n      margin: '3px 0px 3px 16px',\r\n    },\r\n  }),\r\n);\r\nfunction ChatFooter(props:any) {\r\n    const classes = useStyles();\r\n    const [input,setInput]:any = useState()\r\n    const onInputChange = (e:any)=>{\r\n        setInput(e.target.value)\r\n    }\r\n    const sendMessage = (e:any)=>{\r\n        e.preventDefault();\r\n        input && input.length>0 && props.sendMessage(input);\r\n        setInput('');\r\n    }\r\n    return (\r\n        <Box bgcolor='#f6f6f6' p={1} display='flex' alignItems='center'>\r\n            <IconButton >\r\n                <InsertEmoticonIcon style={{fontSize:'26px'}}/>\r\n            </IconButton>\r\n            <Box flex={1} mx={1} bgcolor='white' borderRadius='20px' height='35px' border={`1px solid ${Colors.DIVIDER}`}>\r\n                <form>\r\n                <InputBase\r\n                    value={input}\r\n                    onChange={onInputChange}\r\n                    className={classes.margin}\r\n                    placeholder='Search or start new chat'\r\n                    inputProps={{ 'aria-label': 'naked' }}\r\n                />\r\n                <button type='submit' style={{display:'none'}} onClick={sendMessage}></button>\r\n                </form>\r\n            </Box>\r\n            <IconButton >\r\n                <MicIcon style={{fontSize:'26px'}}/>\r\n            </IconButton>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChatFooter\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Box } from '@material-ui/core'\r\nimport RightHeader from './RightHeader'\r\nimport ChatWindow from './ChatWindow'\r\nimport ChatFooter from './ChatFooter'\r\nimport { useParams } from 'react-router-dom'\r\nimport db from '../firebase'\r\nimport firebase from 'firebase'\r\nimport { useRecoilState } from 'recoil'\r\nimport { userState } from '../state'\r\n\r\nfunction RightPanel() {\r\n    const params:any = useParams();\r\n    const [chatRoomName,setChatRoomName]:any = useState();\r\n    const [messages,setMessages]:any = useState();\r\n    const [user,setUser]:any = useRecoilState(userState);\r\n    useEffect(() => {\r\n        if(params){\r\n            db.collection('chatrooms').doc(`${params.id}`).onSnapshot((snapshot:any)=>{\r\n                setChatRoomName(snapshot.data().name);\r\n            })\r\n            db.collection('chatrooms').doc(`${params.id}`).collection('messages').orderBy('timestamp','asc')\r\n            .onSnapshot((snapshot:any)=>{\r\n                setMessages(snapshot.docs.map((doc:any)=>{\r\n                    return doc.data()\r\n                }))\r\n            })\r\n        }\r\n    }, [params])\r\n    const sendMessage = (message:string)=>{\r\n        if(user){\r\n            let userData = JSON.parse(user)\r\n            db.collection('chatrooms').doc(`${params.id}`).collection('messages').add({\r\n                message:message,\r\n                name: userData.displayName,\r\n                timestamp : firebase.firestore.FieldValue.serverTimestamp()\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <Box flex={0.7} display='flex' flexDirection='column'>\r\n            <RightHeader chatRoomName={chatRoomName}/>\r\n            <ChatWindow userName={JSON.parse(user).displayName} messages={messages}/>\r\n            <ChatFooter sendMessage={sendMessage}/>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default RightPanel\r\n","import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useRecoilState } from 'recoil';\r\nimport { auth,provider } from '../firebase'\r\nimport { userState } from '../state';\r\n\r\nfunction SignIn(props:any) {\r\n    const [user, setUser]:any = useRecoilState(userState);\r\n    const signIn = () =>{\r\n        auth.signInWithPopup(provider).then((result)=>{\r\n            console.log(result)\r\n            setTimeout(()=>{\r\n                setUser(JSON.stringify(result.user))\r\n            },2000)\r\n        }).catch((error)=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <Button onClick={signIn}>Sign In</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn\r\n","import React, { useEffect, useState } from 'react'\r\nimport Box from '@material-ui/core/Box'\r\nimport LeftPanel from './LeftPanel'\r\nimport RightPanel from './RightPanel'\r\nimport db from '../firebase'\r\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom'\r\nimport SignIn from './SignIn'\r\nimport { useRecoilState } from 'recoil'\r\nimport { userState } from '../state'\r\n\r\nfunction Dashboard(props:any) {\r\n     const [user,setUser] = useRecoilState(userState);\r\n    return (\r\n        <Box height='inherit' display='flex'>\r\n            {\r\n                !user\r\n                ?<SignIn setUser={setUser}/>\r\n                :<Router>\r\n                <LeftPanel/>\r\n                    <Switch>\r\n                        <Route path='/rooms/:id'>\r\n                            <RightPanel/>\r\n                        </Route>\r\n                    </Switch>\r\n                </Router>\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import React from 'react';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport {\n  RecoilRoot,\n  atom,\n  selector,\n  useRecoilState,\n  useRecoilValue,\n} from 'recoil';\nfunction App() {\n  return (\n    <div className=\"App\" style={{height:'100vh',overflow:'hidden'}}>\n      <RecoilRoot>\n      <Dashboard/>\n      </RecoilRoot>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}